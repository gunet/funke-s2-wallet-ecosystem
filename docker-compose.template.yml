version: '3.9'

name: wallet-ecosystem
services:
  
  wallet-db:
    image: mariadb
    container_name: wallet-db
    hostname: wallet-db
    restart: on-failure
    ports:
      - 127.0.0.1:3307:3307
    expose: 
      - 3307
    environment:
      MARIADB_HOST: wallet-db
      MARIADB_ROOT_PASSWORD: root
      MARIADB_USER: myuser
      MARIADB_PASSWORD:
      MYSQL_TCP_PORT: 3307
      MYSQL_UNIX_PORT: 3307
    healthcheck:
      test: ["CMD", "mariadb" ,"-uroot", "-proot", "--protocol=TCP", "-hlocalhost", "--port=3307",  "-estatus"]
      start_period: 60s
      #start_interval: 5s  # Not yet supported it seems, but upcoming: https://github.com/docker/compose/issues/10830
      interval: 5s         # Delete this line when start_interval becomes supported
      timeout: 2s
    volumes:
      # persist data files into `datadir` volume managed by docker
      - datadir:/var/lib/mysql
      # bind-mount any sql files that should be run while initializing
      - ./db-setup/scripts/:/docker-entrypoint-initdb.d/

  # wallet-phpmyadmin:
  #   image: phpmyadmin/phpmyadmin:latest
  #   container_name: wallet-phpmyadmin
  #   hostname: wallet-phpmyadmin
  #   ports:
  #     - 8081:8081
  #   environment:
  #     APACHE_PORT: 8081
  #     PMA_HOST: wallet-db
  #     PMA_PORT: 3307

  wallet-backend-server:
    container_name: wallet-backend-server
    build:
      context: $PWD/wallet-backend-server
      dockerfile: development.Dockerfile
    image: wallet-backend-server:dev
    restart: on-failure
    ports:
      - 8002:8002
    depends_on:
      wallet-db:
        condition: service_healthy
    volumes:
      - ./wallet-backend-server:/app:rw
      - ./.vscode/:/app/.vscode:rw
      - type: tmpfs
        target: /dist
        tmpfs:
          mode: 01777
    deploy:
      resources:
          limits:
            memory: 1G

  wallet-frontend:
    build:
      context: $PWD/wallet-frontend
      dockerfile: development.Dockerfile
    image: wallet-frontend:dev
    container_name: wallet-frontend
    hostname: wallet-frontend
    ports:
      - 3000:3000
    volumes:
      - ./wallet-frontend/public:/app/public:rw
      - ./wallet-frontend/src:/app/src:rw
      - ./wallet-frontend/.env:/app/.env:rw
      - ./.vscode/:/app/.vscode:rw
      - type: tmpfs
        target: /app/node_modules/.cache
        tmpfs:
          mode: 01777

  ausweisapp:
    image: governikus/ausweisapp2
    profiles:
      - ausweis

  ausweisapp-client:
    build:
      context: $PWD/ausweissapp-client
      dockerfile: development.Dockerfile
    volumes:
      - ./ausweissapp-client:/app
    ports:
      - 24727:24727
    depends_on:
      - ausweisapp
    profiles:
      - ausweis

  apache-proxy:
    build:
      context: $PWD/apache-proxy
      dockerfile: Dockerfile.apache-rproxy
    restart: always
    ports:
      - 8443:443

  wallet-enterprise-acme-verifier:
    container_name: wallet-enterprise-acme-verifier
    hostname: wallet-enterprise-acme-verifier
    build:
      context: $PWD/wallet-enterprise
      dockerfile: development.Dockerfile
    image: wallet-enterprise:dev-verifier
    restart: on-failure
    ports:
      - 8005:8005
    depends_on:
      wallet-db:
        condition: service_healthy
    volumes:
      - ./wallet-enterprise:/app:rw
      - ./wallet-enterprise-configurations/acme-verifier/config/index.ts:/app/config/index.ts:rw
      - ./wallet-enterprise-configurations/acme-verifier/keys:/app/keys:rw
      - ./wallet-enterprise-configurations/acme-verifier/src/configuration:/app/src/configuration:rw
      - ./wallet-enterprise-configurations/acme-verifier/public/styles/main.css:/app/public/styles/main.css:rw
      - ./wallet-enterprise-configurations/acme-verifier/public/images:/app/public/images:rw
      - ./.vscode/:/app/.vscode:rw
      - type: tmpfs
        target: /app/dist
        tmpfs:
          mode: 01777
    deploy:
      resources:
          limits:
            memory: 1G

  wallet-enterprise-por-issuer:
    container_name: wallet-enterprise-por-issuer
    hostname: wallet-enterprise-por-issuer
    build:
      context: $PWD/wallet-enterprise
      dockerfile: development.Dockerfile
    image: wallet-enterprise:dev-por
    restart: on-failure
    ports:
      - 8000:8000
    depends_on:
      wallet-db:
        condition: service_healthy
    volumes:
      - ./wallet-enterprise:/app:rw
      - ./wallet-enterprise-configurations/por-issuer/dataset:/app/dataset:rw
      - ./wallet-enterprise-configurations/por-issuer/config/index.ts:/app/config/index.ts:rw
      - ./wallet-enterprise-configurations/por-issuer/keys:/app/keys:rw
      - ./wallet-enterprise-configurations/por-issuer/src/configuration:/app/src/configuration:rw
      - ./wallet-enterprise-configurations/por-issuer/public/images:/app/public/images:rw
      - ./wallet-enterprise-configurations/por-issuer/views/issuer/auth-method-selection.pug:/app/views/issuer/auth-method-selection.pug:rw
      - ./wallet-enterprise-configurations/por-issuer/public/styles/main.css:/app/public/styles/main.css:rw
      - ./.vscode/:/app/.vscode:rw
      - type: tmpfs
        target: /app/dist
        tmpfs:
          mode: 01777
    deploy:
      resources:
          limits:
            memory: 1G
    profiles:
      - por

volumes:
  datadir:
  cache:
    driver: local
